<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jmh.mapper.MemberMapper">
	
	<!--  데이터베이스의 컬럼과 VO가 다를때-->
	<!-- <RESULTMAP TYPE="COM.JMH.VO.BOARDVO" ID="BOARDVO">
    	<RESULT PROPERTY="BOARDTYPE" 	COLUMN="BOARD_TYPE"/>
    	<RESULT PROPERTY="BOARDNUM" 	COLUMN="BOARD_NUM"/>
    	<RESULT PROPERTY="BOARDTITLE" 	COLUMN="BOARD_TITLE"/>
    	<RESULT PROPERTY="BOARDCOMMENT" COLUMN="BOARD_COMMENT"/>
    </RESULTMAP> -->
	
	<!-- <select id="getmemberList" resultType="com.jmh.vo.memberVO">
		/*getmemberList*/
		SELECT 
		 MEMBER_ID
		  ,MEMBER_NAME
		  ,MEMBER_SEX
		  ,MEMBER_POSITION
		  ,MEMBER_TEL
		  ,MEMBER_SKILL_LANGUAGE
		  ,MEMBER_SKILL_DB
		  ,MEMBER_STARTDATE
		  ,TO_CHAR(MEMBER_STARTDATE, 'YY/MM/DD') MEMBER_STARTDATE
		  ,MEMBER_STARTDATE
		  ,TO_CHAR(MEMBER_STARTDATE, 'YYYY-MM-DD') MEMBER_STARTDATE
		FROM 
		(
		   SELECT
		      	MEMBER_ID
		  		,MEMBER_NAME
		  		,MEMBER_SEX
		  		,MEMBER_POSITION
		  		,MEMBER_TEL
		  		,MEMBER_SKILL_LANGUAGE
		  		,MEMBER_SKILL_DB
		  		,MEMBER_STARTDATE
		      	,ROW_NUMBER() OVER(ORDER BY member_id DESC) AS NUMROW
		      	,COUNT(*) OVER() AS TOTAL_CNT
			FROM
				MEMBER
		)
		WHERE 
			NUMROW BETWEEN #{startNo} AND #{endNo}
	</select> -->
	<select id="getmemberList" resultType="com.jmh.vo.memberVO">
		/*getmemberList*/
		SELECT 
		 MEMBER_ID
		  ,MEMBER_NAME
		  ,CASE
            WHEN MEMBER_SEX = 'D011' THEN '남자'
            WHEN MEMBER_SEX = 'D012' THEN '여자'
          END AS MEMBER_SEX
          ,CASE
            WHEN MEMBER_POSITION = 'D028' THEN '사원'
            WHEN MEMBER_POSITION = 'D027' THEN '대리'
            WHEN MEMBER_POSITION = 'D026' THEN '과장'
            WHEN MEMBER_POSITION = 'D025' THEN '차장'
            WHEN MEMBER_POSITION = 'D024' THEN '부장'
            WHEN MEMBER_POSITION = 'D023' THEN '이사'
            WHEN MEMBER_POSITION = 'D022' THEN '상무'
            WHEN MEMBER_POSITION = 'D021' THEN '사장'
          END AS MEMBER_POSITION
		  ,MEMBER_TEL
		  ,CASE
            WHEN MEMBER_SKILL_LANGUAGE = 'S010' THEN 'JAVA'
            WHEN MEMBER_SKILL_LANGUAGE = 'S011' THEN 'PYTHON'
            WHEN MEMBER_SKILL_LANGUAGE = 'S012' THEN 'C++'
            WHEN MEMBER_SKILL_LANGUAGE = 'S013' THEN 'RUBY'
          END AS MEMBER_SKILL_LANGUAGE
          ,CASE
            WHEN MEMBER_SKILL_DB = 'S020' THEN 'ORACLE'
            WHEN MEMBER_SKILL_DB = 'S021' THEN 'MSSQL'
            WHEN MEMBER_SKILL_DB = 'S022' THEN 'MYSQL'
            WHEN MEMBER_SKILL_DB = 'S023' THEN 'POSTGRESQL'
          END AS MEMBER_SKILL_DB
		  ,MEMBER_STARTDATE
		FROM 
		(
		   SELECT
		      	MEMBER_ID
		  		,MEMBER_NAME
		  		,MEMBER_SEX
		  		,MEMBER_POSITION
		  		,MEMBER_TEL
		  		,MEMBER_SKILL_LANGUAGE
		  		,MEMBER_SKILL_DB
		  		,MEMBER_STARTDATE
		      	,ROW_NUMBER() OVER(ORDER BY MEMBER_ID DESC) AS NUMROW
		      	,COUNT(*) OVER() AS TOTAL_CNT
			FROM
				MEMBER
		)
		WHERE 
			NUMROW BETWEEN #{startNo} AND #{endNo}
		
	</select>
	
	<select id="searchmemberList" resultType="com.jmh.vo.memberVO"><!-- parameterType="com.jmh.vo.memberVO" -->
		SELECT 
		 MEMBER_ID
		  ,MEMBER_NAME
		  ,CASE
            WHEN MEMBER_SEX = 'D011' THEN '남자'
            WHEN MEMBER_SEX = 'D012' THEN '여자'
          END AS MEMBER_SEX
          ,CASE
            WHEN MEMBER_POSITION = 'D028' THEN '사원'
            WHEN MEMBER_POSITION = 'D027' THEN '대리'
            WHEN MEMBER_POSITION = 'D026' THEN '과장'
            WHEN MEMBER_POSITION = 'D025' THEN '차장'
            WHEN MEMBER_POSITION = 'D024' THEN '부장'
            WHEN MEMBER_POSITION = 'D023' THEN '이사'
            WHEN MEMBER_POSITION = 'D022' THEN '상무'
            WHEN MEMBER_POSITION = 'D021' THEN '사장'
          END AS MEMBER_POSITION
		  ,MEMBER_TEL
		  ,CASE
            WHEN MEMBER_SKILL_LANGUAGE = 'S010' THEN 'JAVA'
            WHEN MEMBER_SKILL_LANGUAGE = 'S011' THEN 'PYTHON'
            WHEN MEMBER_SKILL_LANGUAGE = 'S012' THEN 'C++'
            WHEN MEMBER_SKILL_LANGUAGE = 'S013' THEN 'RUBY'
          END AS MEMBER_SKILL_LANGUAGE
          ,CASE
            WHEN MEMBER_SKILL_DB = 'S020' THEN 'ORACLE'
            WHEN MEMBER_SKILL_DB = 'S021' THEN 'MSSQL'
            WHEN MEMBER_SKILL_DB = 'S022' THEN 'MYSQL'
            WHEN MEMBER_SKILL_DB = 'S023' THEN 'POSTGRESQL'
          END AS MEMBER_SKILL_DB
		  ,MEMBER_STARTDATE
		FROM 
		(
		   SELECT
		      	MEMBER_ID
		  		,MEMBER_NAME
		  		,MEMBER_SEX
		  		,MEMBER_POSITION
		  		,MEMBER_TEL
		  		,MEMBER_SKILL_LANGUAGE
		  		,MEMBER_SKILL_DB
		  		,MEMBER_STARTDATE
		      	,ROW_NUMBER() OVER(ORDER BY MEMBER_ID DESC) AS NUMROW
		      	,COUNT(*) OVER() AS TOTAL_CNT
			FROM
				MEMBER
			WHERE
				MEMBER_NAME LIKE '%'||#{searchWord}||'%'
			<!-- <include refid="criteria"></include> -->
		)
		WHERE 
			NUMROW BETWEEN #{startNo} AND #{endNo} AND MEMBER_NAME = #{searchWord}
		
	</select>
	<!-- <select id="getTotalCnt" resultType="integer"  parameterType="integer">
		/*getTotalCnt*/
		SELECT 
			COUNT(*) 
		FROM 
			MEMBER
	</select> -->
	<select id="getTotalCnt" resultType="integer"  parameterType="integer">
		/*getTotalCnt*/
		SELECT 
			COUNT(*) 
		FROM 
			MEMBER
	</select>
	
	 <delete id="deleteMember" parameterType="integer" >
	 	/*deleteMember*/
		DELETE 
		FROM 
			MEMBER
		WHERE 
			MEMBER_ID = #{member_Id}
	</delete>
	
	<insert id="insertMember" parameterType="com.jmh.vo.memberVO">
		/*insertMember*/
		INSERT 
		INTO 
			MEMBER
			(
				MEMBER_ID
		  		,MEMBER_NAME
		  		,MEMBER_SEX
		  		,MEMBER_POSITION
		  		,MEMBER_TEL
		  		,MEMBER_SKILL_LANGUAGE
		  		,MEMBER_SKILL_DB
		  		,MEMBER_STARTDATE
		  		) 
		VALUES 
		(
			(
				SELECT 
		  			TO_NUMBER(NVL(MAX(MEMBER_ID), 0))+ 1 
		  		FROM 
		  			MEMBER
		  	)
		  		,#{member_Name}
		  		,#{member_Sex}
		  		,#{member_Position}
		  		,#{member_Tel}
		  		,#{member_Skill_Language}
		  		,#{member_Skill_DB}
		  		,#{member_startDate}
		 )
	</insert>
	
	<select id="selectId" resultType="boolean"><!-- parameterType="String" -->
		SELECT 
			COUNT(*)
		FROM 
			MEMBER 
		WHERE 
			MEMBER_TEL = #{member_Tel}
	</select>
	
	<select id="getModifyList" resultType="com.jmh.vo.memberVO" parameterType="integer">
		SELECT 
			* 
		FROM 
			MEMBER
		WHERE 
			MEMBER_ID = #{member_Id}
	</select>
	
	<update id="memberModify" parameterType="com.jmh.vo.memberVO">
		UPDATE 
			MEMBER 
		SET 
			MEMBER_NAME = #{member_Name}
			,MEMBER_SEX = #{member_Sex}
			,MEMBER_POSITION = #{member_Position}
			,MEMBER_TEL = #{member_Tel} 
			,MEMBER_SKILL_LANGUAGE = #{member_Skill_Language} 
			,MEMBER_SKILL_DB = #{member_Skill_DB} 
			,MEMBER_STARTDATE = #{member_startDate}
			,MEMBER_ENDDATE = #{member_endDate}  
		WHERE 
			MEMBER_ID = #{member_Id}
	</update>
	
	<select id="member_Tel_ck" resultType="int"> <!-- parameterType="String"  -->
		SELECT
			COUNT(*)
		FROM
			MEMBER
		WHERE 
			MEMBER_TEL = #{member_Tel}
	</select>
	
	<!-- 20/05/06 과 같이 값이 보일 뿐, 실제 값이 YY/MM/DD 로 저장된게 아닙니다.
뷰단에 원하는 포맷으로 출력을 원하시면

	 -->
	
	<!-- <sql id="criteria">
		<choose>
			<when test="searchField == 'name'">
				MEMBER_NAME LIKE '%'||#{searchWord}||'%'
			</when>
			<when test="searchField == 'content'">
				and BContent like '%'||#{searchWord}||'%'
			</when>
			<when test="searchField == 'writer'">
				and BTYPE like '%'||#{searchWord}||'%'
			</when>
		</choose>
	</sql> -->
</mapper>  
